stats
demo()
error.catching
demo(error.catching)
demo(Hershey)
help.start
quit()
help.start
data(turnout)
current.packages
turnout
data(turnout)
quit()
zelig()
Zelig()
data(turnout)
display(turnout)
print(turnout)
quit()
quit(null)
quit()
x<-rnorm(50)
y<-rnorm(x)
plot(x,y)
ls()
rm(x,y)
ls()
x<-1:20
w<-1+sqrt(x)/2
dummy<-data.frame(x=x, y=x+ rnorm(x)*w)
fm1<- lm(y~x, data=dummy, weight=1/w^2)
summary(fm1)
attach(dummy)
lrf<- lowess(x.y)
lrf,_ lowess(x,y)
lrf<- lowess(x,y)
plot(x,y)
lines(x,lrf$y)
lines(x, lrf$y)
quit()
install.packages("eha")
instll.packages("eha")
install.packages("eha")
install.packages("MASS")
setInternet2
setInternet2(TRUE)
install.packages("epicalc")
install.packages("eha")
library(eha)
aftreg.fit
aftreg
rm(list = ls())
library(epicalc)
detachAllData()
library(foreign)
library(maxLik)
library(stargazer)
library(AER)
setwd("C:/Users/JRB/Dropbox/505/paper/mil")
mil <- read.csv("jme_v1.csv")
mil <- as.matrix(mil)
mil[,2][mil[,2] == "SVK "] = "SVK"
mil[,19][mil[,19] == "Mar"] = "MAR"
mil <- subset(mil, mil[,3] != "NATO")
mil <- subset(mil, mil[,5] != "NATO")
countries <- mil[,2]
for (i in 3:ncol(mil)) {countries <- c(countries,mil[,i])}
countries <- sort(unique(countries))
countryid <- as.integer(1:length(countries))
statea <- rep(countries[3:length(countries)],
times = length(countries) - 2)
stateaid <- match(statea,countries)
stateb <- rep(countries[3:length(countries)],
each = length(countries) - 2)
statebid <- match(stateb,countries)
states <- cbind(statea,stateaid,stateb,statebid)
rm(statea,stateaid,stateb,statebid)
states <- as.data.frame(states)
states <- subset(states, states$stateaid != states$statebid)
states$id <- as.numeric(data.matrix(states$stateaid)) * 1000 +
as.numeric(data.matrix(states$statebid))
states$idc <- 0
idctot = matrix(data = NA, nrow = 29756, ncol = 11)
rm(list = ls())
library(epicalc)
detachAllData()
library(foreign)
library(maxLik)
library(stargazer)
library(AER)
mil <- read.csv("jme_v1.csv")
mil <- as.matrix(mil)
mil[,2][mil[,2] == "SVK "] = "SVK"
mil[,19][mil[,19] == "Mar"] = "MAR"
mil <- subset(mil, mil[,3] != "NATO")
mil <- subset(mil, mil[,5] != "NATO")
countries <- mil[,2]
for (i in 3:ncol(mil)) {countries <- c(countries,mil[,i])}
countries <- sort(unique(countries))
countryid <- as.integer(1:length(countries))
statea <- rep(countries[3:length(countries)],
times = length(countries) - 2)
stateaid <- match(statea,countries)
stateb <- rep(countries[3:length(countries)],
each = length(countries) - 2)
statebid <- match(stateb,countries)
states <- cbind(statea,stateaid,stateb,statebid)
rm(statea,stateaid,stateb,statebid)
states <- as.data.frame(states)
states <- subset(states, states$stateaid != states$statebid)
states$id <- as.numeric(data.matrix(states$stateaid)) * 1000 +
as.numeric(data.matrix(states$statebid))
states$idc <- 0
idctot = matrix(data = NA, nrow = 29756, ncol = 11)
rm(list = ls())
library(epicalc)
detachAllData()
library(foreign)
library(maxLik)
library(stargazer)
library(AER)
setwd("C:/Users/JRB/Dropbox/505/paper/mil")
mil <- read.csv("jme_v1.csv")
mil <- as.matrix(mil)
mil[,2][mil[,2] == "SVK "] = "SVK"
mil[,19][mil[,19] == "Mar"] = "MAR"
mil <- subset(mil, mil[,3] != "NATO")
mil <- subset(mil, mil[,5] != "NATO")
countries <- mil[,2]
for (i in 3:ncol(mil)) {countries <- c(countries,mil[,i])}
countries <- sort(unique(countries))
countryid <- as.integer(1:length(countries))
statea <- rep(countries[3:length(countries)],
times = length(countries) - 2)
stateaid <- match(statea,countries)
stateb <- rep(countries[3:length(countries)],
each = length(countries) - 2)
statebid <- match(stateb,countries)
states <- cbind(statea,stateaid,stateb,statebid)
rm(statea,stateaid,stateb,statebid)
states <- as.data.frame(states)
states <- subset(states, states$stateaid != states$statebid)
states$id <- as.numeric(data.matrix(states$stateaid)) * 1000 +
as.numeric(data.matrix(states$statebid))
states$idc <- 0
idctot = matrix(data = NA, nrow = 29756, ncol = 11)
load("/Users/justinnicholson/Dropbox/Class/PE2/FinalPaper/indepvars.rda")
View(indepvars)
load("/Users/justinnicholson/Dropbox/Class/PE2/FinalPaper/states2.rda")
View(states2)
imf_test
#Libraries
library(foreign)
library(countrycode)
library(epicalc)
#Cleanup and preliminaries
detachAllData()                                #detach all previous data - requires epicalc library
setwd("~/Dropbox/Academic/2YP/data/")    #set working directory
load("adjudication.rda")
data$t.tenure = t.tenure
write.csv(data,"data.csv")
arch[arch$ccode == 2]
arch[arch$ccode == 2,]
data$INIT_DATE[6231,]
data$INIT_DATE[6231]
data$INIT_DATE[6200]
data$INIT_DATE[7]
t.tenure[7]
which(arch$ccode == data$t.ccode[7] & arch$eindate <= data$cdate[7] & data$cdate[7] <= arch$eoutdate
which(arch$ccode == data$t.ccode[7] & arch$eindate <= data$cdate[7] & data$cdate[7] <= arch$eoutdate)
which(arch$ccode == data$t.ccode[7])
arch$leader[which(arch$ccode == data$t.ccode[7])]
data$t.ccode[7]
save.image(file = "adjudication.rda")
