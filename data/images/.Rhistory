Eyboot
Eyeboot
Eyboot
sd(Eyboot)
fix(`X1`)
?apply
# Benjamin Laughlin
# PSC 505 HW 9
rm(list=ls())
library(epicalc)
detachAllData()
library(foreign)
library(maxLik)
library(xtable)
library(games)
library(pbivnorm)
library(stats)
# import data
setwd("/Users/benjaminlaughlin/Google Drive/505/505 HW9")
data(leblang2003)
# Question 1
# create dummies for regression
leblang2003$attack = as.numeric(leblang2003$outcome != "no attack")
leblang2003$defend = as.numeric(leblang2003$outcome == "defend")
leblang2003$devalue = as.numeric(leblang2003$outcome == "devaluation")
# function for games regression
flb = outcome ~ capcont + lreserves + overval + creditgrow +
USinterest + service + contagion + prioratt - 1 | 1 | 1 |
unifgov + lexports + preelec + postelec + rightgov + realinterest +
capcont + lreserves
flb1 = as.Formula(flb)
flb2 = update(flb1, attack + defend ~ .)
# games regressions - mle for both private information and agent error versions
leb1 = egame12(flb1, data = leblang2003, link = "probit", type = "private")
leb1a = egame12(flb1, data = leblang2003, link = "probit", type = "agent")
leb2 = egame12(flb2, data = leblang2003, link = "probit", type = "private")
leb2a = egame12(flb2, data = leblang2003, link = "probit", type = "agent")
summary(leb1)
summary(leb1a)
leb1.t = latexTable(leb1)
leb1a.t = latexTable(leb1a)
# Question 2
# subset of data where attack occurred
subset1 = subset(leblang2003, leblang2003$attack==1)
# regression on player 2's decision using logit link
b24 = glm(defend ~ unifgov + lexports + preelec + postelec
+ rightgov + realinterest + capcont + lreserves,
data=subset1, family=binomial(link="probit"))
b24$coefficient*sqrt(2)
# X matrix for player 2's decisions
X = matrix(cbind(1, leblang2003$unifgov, leblang2003$lexports,
leblang2003$preelec, leblang2003$postelec,
leblang2003$rightgov, leblang2003$realinterest,
leblang2003$capcont, leblang2003$lreserves),
ncol=9)
# b for MLE estimation
b = b24$coef
# calculate probabilities of p3 and p4
p4 = 1/(1+exp(-(X%*%b)))
p3 = 1-p4
leblang2003$za1 = p3%*%1
leblang2003$za2 = p4%*%1
# X matrix for player 1's utilities
X1 = matrix(cbind(leblang2003$capcont, leblang2003$lreserves,
leblang2003$overval, leblang2003$creditgrow,
leblang2003$USinterest, leblang2003$service,
leblang2003$contagion, leblang2003$prioratt),
ncol=8)
X1neg = -X1
colnames(X1neg) = c("capcont", "lreserves", "overval", "creditgrow",
"USinterest", "service", "contagion", "prioratt")
# estimation of player 1's coefficients
b1 = glm(leblang2003$attack ~ X1neg + leblang2003$za1 + leblang2003$za2 -1,
family=binomial(link="probit"))
b1$coef*sqrt(2)
# Question 3
# matrices for MLE
X24 = matrix(cbind(1, leblang2003$unifgov, leblang2003$lexports,
leblang2003$preelec, leblang2003$postelec,
leblang2003$rightgov, leblang2003$realinterest,
leblang2003$capcont, leblang2003$lreserves),
ncol=9)
colnames(X24) = c("intercept", "unifgov", "lexports", "preelec", "postelec", "rightgov",
"realinterest", "capcont", "lreserves")
X13 = matrix(cbind(1), nrow=(length(X24)/9))
X14 = matrix(cbind(1), nrow=(length(X24)/9))
X11 = matrix(cbind(leblang2003$capcont, leblang2003$lreserves,
leblang2003$overval, leblang2003$creditgrow,
leblang2003$USinterest, leblang2003$service,
leblang2003$contagion, leblang2003$prioratt),
ncol=8)
colnames(X11) = c("capcont", "lreserves", "overval", "creditgrow",
"USinterest", "service", "contagion", "prioratt")
leb =function(b, X24, X13, X14, X11){
#b = peel off some betas
sigma = 1
b24 = b[1:9]
b13 = b[10]
b14 = b[11]
b11 = b[12:19]
p4 = pnorm(X24%*%b24/(sigma*sqrt(2)))
p3 = 1-p4
p2 = pnorm((p3*X13%*%b13 + p4*X14%*%b14 - X11%*%b11)/
(sigma*sqrt(1 + p3^2 + p4^2)))
p1 = 1-p2
lik = p1^(leblang2003$attack==0)  *
(p2*p3)^(leblang2003$attack==1 & leblang2003$devalue==1)  *
(p2*p4)^(leblang2003$attack==1 & leblang2003$defend==1)
llik = log(lik)
sum(llik)
}
# MLE using maxLik
stval = runif(19)*0.1          # starting values
leb.mle = maxLik(leb, start = stval, method = "BFGS", X24=X24, X13=X13, X14=X14, X11=X11)
summary(leb.mle)
# plot
pred.leb1 = predProbs(leb1, x = "lexports", contagion = max(contagion))
plot(pred.leb1, xlab="Log of Exports", ylab="Probability of War")
# Question 4
# function to estimate the bivariate probit selection model
BivProb = function(b, X1, X2, outcomes){
rho = b[length(b)]
# ensure legitmate values for rho
rho = (exp(rho)-1)/(exp(rho)+1)
# pull out betas
b = b[1:(length(b)-1)]
b1 = b[1:ncol(X1)]
b2 = b[(ncol(X1)+1):length(b)]
# calculate probabilities
p1 = pnorm(-X1%*%b1)
p3 = pnorm(X1%*%b1)-pbivnorm(cbind(X1%*%b1, X2%*%b2), rho=rho)
p4 = pbivnorm(cbind(X1%*%b1, X2%*%b2), rho=rho)
# fix NaNs
p1[p1 < .Machine$double.eps] = .Machine$double.eps
p3[p3 < .Machine$double.eps] = .Machine$double.eps
p4[p4 < .Machine$double.eps] = .Machine$double.eps
llik = (outcomes==0)*log(p1)+(outcomes==1)*log(p3)+(outcomes==2)*log(p4)
llik
}
stval = runif(ncol(x1) + ncol(x2) + 1)*0.1
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'NM', X1 = x1, X2 = x2, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
summary(leblang_bivariate_probit)
BivProb = function(b, X1, X2, outcomes){
rho = b[length(b)]
# ensure legitmate values for rho
rho = (exp(rho)-1)/(exp(rho)+1)
# pull out betas
b = b[1:(length(b)-1)]
b1 = b[1:ncol(X1)]
b2 = b[(ncol(X1)+1):length(b)]
# calculate probabilities
p1 = pnorm(-X1%*%b1)
p3 = pnorm(X1%*%b1)-pbivnorm(cbind(X1%*%b1, X2%*%b2), rho=rho)
p4 = pbivnorm(cbind(X1%*%b1, X2%*%b2), rho=rho)
# fix NaNs
p1[p1 < .Machine$double.eps] = .Machine$double.eps
p3[p3 < .Machine$double.eps] = .Machine$double.eps
p4[p4 < .Machine$double.eps] = .Machine$double.eps
llik = (outcomes==0)*log(p1)+(outcomes==1)*log(p3)+(outcomes==2)*log(p4)
llik
}
stval = runif(ncol(x1) + ncol(x2) + 1)*0.1
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'NM', X1 = x1, X2 = x2, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
summary(leblang_bivariate_probit)
# Benjamin Laughlin
# PSC 505 HW 9
rm(list=ls())
library(epicalc)
detachAllData()
library(foreign)
library(maxLik)
library(xtable)
library(games)
library(pbivnorm)
library(stats)
# import data
setwd("/Users/benjaminlaughlin/Google Drive/505/505 HW9")
data(leblang2003)
# Question 1
# create dummies for regression
leblang2003$attack = as.numeric(leblang2003$outcome != "no attack")
leblang2003$defend = as.numeric(leblang2003$outcome == "defend")
leblang2003$devalue = as.numeric(leblang2003$outcome == "devaluation")
# function for games regression
flb = outcome ~ capcont + lreserves + overval + creditgrow +
USinterest + service + contagion + prioratt - 1 | 1 | 1 |
unifgov + lexports + preelec + postelec + rightgov + realinterest +
capcont + lreserves
flb1 = as.Formula(flb)
flb2 = update(flb1, attack + defend ~ .)
# games regressions - mle for both private information and agent error versions
leb1 = egame12(flb1, data = leblang2003, link = "probit", type = "private")
leb1a = egame12(flb1, data = leblang2003, link = "probit", type = "agent")
leb2 = egame12(flb2, data = leblang2003, link = "probit", type = "private")
leb2a = egame12(flb2, data = leblang2003, link = "probit", type = "agent")
summary(leb1)
summary(leb1a)
leb1.t = latexTable(leb1)
leb1a.t = latexTable(leb1a)
# Question 2
# subset of data where attack occurred
subset1 = subset(leblang2003, leblang2003$attack==1)
# regression on player 2's decision using logit link
b24 = glm(defend ~ unifgov + lexports + preelec + postelec
+ rightgov + realinterest + capcont + lreserves,
data=subset1, family=binomial(link="probit"))
b24$coefficient*sqrt(2)
# X matrix for player 2's decisions
X = matrix(cbind(1, leblang2003$unifgov, leblang2003$lexports,
leblang2003$preelec, leblang2003$postelec,
leblang2003$rightgov, leblang2003$realinterest,
leblang2003$capcont, leblang2003$lreserves),
ncol=9)
# b for MLE estimation
b = b24$coef
# calculate probabilities of p3 and p4
p4 = 1/(1+exp(-(X%*%b)))
p3 = 1-p4
leblang2003$za1 = p3%*%1
leblang2003$za2 = p4%*%1
# X matrix for player 1's utilities
X1 = matrix(cbind(leblang2003$capcont, leblang2003$lreserves,
leblang2003$overval, leblang2003$creditgrow,
leblang2003$USinterest, leblang2003$service,
leblang2003$contagion, leblang2003$prioratt),
ncol=8)
X1neg = -X1
colnames(X1neg) = c("capcont", "lreserves", "overval", "creditgrow",
"USinterest", "service", "contagion", "prioratt")
# estimation of player 1's coefficients
b1 = glm(leblang2003$attack ~ X1neg + leblang2003$za1 + leblang2003$za2 -1,
family=binomial(link="probit"))
b1$coef*sqrt(2)
# Question 3
# matrices for MLE
X24 = matrix(cbind(1, leblang2003$unifgov, leblang2003$lexports,
leblang2003$preelec, leblang2003$postelec,
leblang2003$rightgov, leblang2003$realinterest,
leblang2003$capcont, leblang2003$lreserves),
ncol=9)
colnames(X24) = c("intercept", "unifgov", "lexports", "preelec", "postelec", "rightgov",
"realinterest", "capcont", "lreserves")
X13 = matrix(cbind(1), nrow=(length(X24)/9))
X14 = matrix(cbind(1), nrow=(length(X24)/9))
X11 = matrix(cbind(leblang2003$capcont, leblang2003$lreserves,
leblang2003$overval, leblang2003$creditgrow,
leblang2003$USinterest, leblang2003$service,
leblang2003$contagion, leblang2003$prioratt),
ncol=8)
colnames(X11) = c("capcont", "lreserves", "overval", "creditgrow",
"USinterest", "service", "contagion", "prioratt")
leb =function(b, X24, X13, X14, X11){
#b = peel off some betas
sigma = 1
b24 = b[1:9]
b13 = b[10]
b14 = b[11]
b11 = b[12:19]
p4 = pnorm(X24%*%b24/(sigma*sqrt(2)))
p3 = 1-p4
p2 = pnorm((p3*X13%*%b13 + p4*X14%*%b14 - X11%*%b11)/
(sigma*sqrt(1 + p3^2 + p4^2)))
p1 = 1-p2
lik = p1^(leblang2003$attack==0)  *
(p2*p3)^(leblang2003$attack==1 & leblang2003$devalue==1)  *
(p2*p4)^(leblang2003$attack==1 & leblang2003$defend==1)
llik = log(lik)
sum(llik)
}
# Question 4
# function to estimate the bivariate probit selection model
BivProb = function(b, X1, X2, outcomes){
rho = b[length(b)]
# ensure legitmate values for rho
rho = (exp(rho)-1)/(exp(rho)+1)
# pull out betas
b = b[1:(length(b)-1)]
b1 = b[1:ncol(X1)]
b2 = b[(ncol(X1)+1):length(b)]
# calculate probabilities
p1 = pnorm(-X1%*%b1)
p3 = pnorm(X1%*%b1)-pbivnorm(cbind(X1%*%b1, X2%*%b2), rho=rho)
p4 = pbivnorm(cbind(X1%*%b1, X2%*%b2), rho=rho)
# fix NaNs
p1[p1 < .Machine$double.eps] = .Machine$double.eps
p3[p3 < .Machine$double.eps] = .Machine$double.eps
p4[p4 < .Machine$double.eps] = .Machine$double.eps
llik = (outcomes==0)*log(p1)+(outcomes==1)*log(p3)+(outcomes==2)*log(p4)
llik
}
stval = runif(ncol(x1) + ncol(x2) + 1)*0.1
stval = runif(ncol(X1) + ncol(X2) + 1)*0.1
stval = runif(ncol(X1) + ncol(X_24) + 1)*0.1
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'NM', X1 = x1, X2 = x2, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
# Question 4
# function to estimate the bivariate probit selection model
BivProb = function(b, X1, X2, outcomes){
rho = b[length(b)]
# ensure legitmate values for rho
rho = (exp(rho)-1)/(exp(rho)+1)
# pull out betas
b = b[1:(length(b)-1)]
b1 = b[1:ncol(X1)]
b2 = b[(ncol(X1)+1):length(b)]
# calculate probabilities
p1 = pnorm(-X1%*%b1)
p3 = pnorm(X1%*%b1)-pbivnorm(cbind(X1%*%b1, X2%*%b2), rho=rho)
p4 = pbivnorm(cbind(X1%*%b1, X2%*%b2), rho=rho)
# fix NaNs
p1[p1 < .Machine$double.eps] = .Machine$double.eps
p3[p3 < .Machine$double.eps] = .Machine$double.eps
p4[p4 < .Machine$double.eps] = .Machine$double.eps
llik = (outcomes==0)*log(p1)+(outcomes==1)*log(p3)+(outcomes==2)*log(p4)
llik
}
stval = runif(ncol(X1) + ncol(X_24) + 1)*0.1
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'NM', X1 = x1, X2 = x2, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
summary(leblang_bivariate_probit)
x1
stval = runif(ncol(X1) + ncol(X_24) + 1)*0.1
stval = runif(ncol(X1) + ncol(X24) + 1)*0.1
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'NM', X1 = x1, X2 = x2, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'NM', X1 = X1, X2 = X24, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
leblang_bivariate_probit
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'BHHH', X1 = X1, X2 = X24, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
summary(leblang_bivariate_probit)
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'BFGS', X1 = X1, X2 = X24, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
summary(leblang_bivariate_probit)
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'NM', X1 = X1, X2 = X24, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
summary(leblang_bivariate_probit)
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'BFGS', X1 = X1, X2 = X24, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
X1 = matrix(cbind(1,leblang2003$capcont, leblang2003$lreserves,
leblang2003$overval, leblang2003$creditgrow)
X24 = matrix(cbind(1, leblang2003$unifgov, leblang2003$lexports,
leblang2003$preelec, leblang2003$postelec,
leblang2003$rightgov)
X1 = matrix(cbind(1,leblang2003$capcont, leblang2003$lreserves,
leblang2003$overval, leblang2003$creditgrow)
)
X24 = matrix(cbind(1, leblang2003$unifgov, leblang2003$lexports,
leblang2003$preelec, leblang2003$postelec,
leblang2003$rightgov))
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'BFGS', X1 = X1, X2 = X24, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
summary(leblang_bivariate_probit)
leblang_bivariate_probit = maxLik(BivProb, start = stval, method = 'BFGS', X1 = X1, X2 = X24, outcomes = leblang2003$attack + leblang2003$defend, iterlim = 8000)
summary(leblang_bivariate_probit)
setwd(~Desktop/Africa_Replication)
setwd("~Desktop/Africa_Replication")
setwd("~Desktop/")
setwd("~Desktop")
#Libraries
library(foreign)
library(countrycode)
library(epicalc)
#Cleanup and preliminaries
detachAllData()                                #detach all previous data - requires epicalc library
setwd("/Users/justinnicholson/documents/academic/projects/2ypaper/data/images")    #set working directory
load("adjudication.rda")
rm(z.out, z.out3)
data
colnames(data)
colnames(data2)
colnames(data2)[ncol(data2)]
colnames(data2)[ncol(data2)] = c("t.WTOdate")
which(is.na(data2$t.WTOdate))
getwd()
write.csv(data2, "data2,csv")
write.csv(data2, "data2.csv")
data2$t.WTOdate
data2$t.WTOdate[data2$INV_CTY_NAME == "Czech Republic"]
data2$INV_CTY_NAME[is.na(data2$t.WTOdate)]
unique(data2$INV_CTY_NAME[is.na(data2$t.WTOdate)])
colnames(data2)
data2$t.WTOdate
data2$t.WTOdate[data2$WTOname == "Czech Republic"]
data2$t.WTOdate[data2$INV_CTY_NAME == "Czech Republic"]
data2$t.WTOdate[data2$INV_CTY_NAME == "Czech Republic"] = "1995-01-01"
unique(data2$INV_CTY_NAME[is.na(data2$t.WTOdate)])
data2$t.WTOdate[data2$INV_CTY_NAME == "Slovakia"] = "1995-01-01"
which(is.na(data2$s.WTOdate))
save.image(file = "adjudication.rda")
getwd()
#Cleanup and preliminaries
detachAllData()                                #detach all previous data - requires epicalc library
setwd("/Users/justinnicholson/documents/academic/projects/2ypaper/data/images")    #set working directory
load("adjudication.rda")
>paneldate = read.csv("/Users/justinnicholson/documents/academic/projects/2ypaper/data/paneldate.csv")
paneldate = read.csv("/Users/justinnicholson/documents/academic/projects/2ypaper/data/paneldate.csv")
paneldate = read.csv("paneldate.csv")
getwd()
getwd()
setwd("/Users/justinnicholson/Documents/academic/projects/2ypaper/data/conversion")
paneldate = read.csv("paneldate.csv")
paneldate
ls(paneldate)
paneldate
paneldate = read.csv("paneldate.csv")
paneldate
ls(data2)
rm(data, data2)
load("adjudication01.rda")
setwd("/Users/justinnicholson/documents/academic/projects/2ypaper/data/images")    #set working directory
load("adjudication01.rda")
load("adjudication01.rda")
paneldate
colnames(data)
data$CASE_ID
disp
ls(disp)
disp(AD_CASE_ID)
disp$AD_CASE_ID
disp
tail(disp)
getwd)
getwd)
getwd()))
getwd()
write.csv(disp, "disp.csv")
disp
disp[43]
disp[43,]
duplicated(data$CASE_ID)
which(duplicated(data$CASE_ID) = T)
which(duplicated(data$CASE_ID) =- T)
which(duplicated(data$CASE_ID) == T)
data$CASE_ID
ls(disp)
duplicated(disp$AD_CASE_ID)
which(duplicated(disp$AD_CASE_ID))
length(which(duplicated(disp$AD_CASE_ID)))
ls(data)
ls(disp)
data2 = merge(data, disp, all.x = T, all.y = F, by.x = "CASE_ID", by.y = "AD_CASE_ID")
6302 - 6231
data3 = unique(data2)
ls(data3)
colnames(data3)
data3$Notes = NULL
data3 = unique(data3)
paneldate
ls(paneldate)
ls(data3)
data3$DSU_Case
data3$DSU_Case %in% paneldate$DSno
length(data3$DSU_Case %in% paneldate$DSno)
(data3$DSU_Case %in% paneldate$DSno)
which(data3$DSU_Case, paneldate$DSno)
which(data3$DSU_Case, paneldate$DSno)
matchh(data3$DSU_Case, paneldate$DSno)
which(toString(data3$DSU_Case), paneldate$DSno)
?which
match(toString(data3$DSU_Case), paneldate$DSno)
which(data3$DSU_Case %in% paneldate$DSno == T)
which(data3$DSU_Case %in% paneldate$DSno == F)
which(data3$DSU_Case
data3$DSU_Case
substr(data3$DSU_Case,3,last)
substr(data3$DSU_Case,4, 7)
substr(data3$DSU_Case,4, nchar(data3$DSU_Case))
substr(data3$DSU_Case,4, toString(nchar(data3$DSU_Case)))
substr(data3$DSU_Case,4, nchar(toString(data3$DSU_Case)))
"023" == "@3"
"023" == "23"
"023" == "023"
023 = 23
023 =- 23
023 == 23
023 == 23
substr(data3$DSU_Case,4, nchar(toString(data3$DSU_Case)))
data3$DSU_Case[6001]
as.vector(substr(data3$DSU_Case,4, nchar(toString(data3$DSU_Case))))
as.integer(substr(data3$DSU_Case,4, nchar(toString(data3$DSU_Case))))
data3$DSUno <- as.integer(substr(data3$DSU_Case,4, nchar(toString(data3$DSU_Case))))
typeof(data3$DSUno)
typeof(paneldate$DSUno)
typeof(paneldate$DSUNo)
ls(paneldate)
typeof(paneldate$DSNo)
data3$DSNo <- data3$DSUno
data3$DSUno = NULL
ls(data3)
data3$DSNo
data3$DSNo %in% paneldate$DSNo
which(data3$DSNo %in% paneldate$DSNo == T)
length(which(data3$DSNo %in% paneldate$DSNo == T))
203 / 6000
(203 / 6000)*100
length(which(!is.na(data2$IMP_DATE)))
250/3368
250/3368 * 100
ls(data3)
colnames(data3)
length(which(is.na(data3$DSU_Case)))
length(which(!is.na(data3$DSU_Case)))
(242/3368)
(242/3368)*100
brein
ls(data)
colnames(data3)
paneldate
ls(data3)
colnames(data3)
data3$DSNo
paneldate
panestdate
paneldate
ls(paneldate)
data4 = merge(data3, paneldate, by = "DSNo", all.x = T, all.y = F)
colnames(data4)[ncol(data4)]
colnames(data4)[ncol(data4)] = "paneldate"
data4$paneldate
161/250
