stats
demo()
error.catching
demo(error.catching)
demo(Hershey)
help.start
quit()
help.start
data(turnout)
current.packages
turnout
data(turnout)
quit()
zelig()
Zelig()
data(turnout)
display(turnout)
print(turnout)
quit()
quit(null)
quit()
x<-rnorm(50)
y<-rnorm(x)
plot(x,y)
ls()
rm(x,y)
ls()
x<-1:20
w<-1+sqrt(x)/2
dummy<-data.frame(x=x, y=x+ rnorm(x)*w)
fm1<- lm(y~x, data=dummy, weight=1/w^2)
summary(fm1)
attach(dummy)
lrf<- lowess(x.y)
lrf,_ lowess(x,y)
lrf<- lowess(x,y)
plot(x,y)
lines(x,lrf$y)
lines(x, lrf$y)
quit()
install.packages("eha")
instll.packages("eha")
install.packages("eha")
install.packages("MASS")
setInternet2
setInternet2(TRUE)
install.packages("epicalc")
install.packages("eha")
library(eha)
aftreg.fit
aftreg
rm(list = ls())
library(epicalc)
detachAllData()
library(foreign)
library(maxLik)
library(stargazer)
library(AER)
setwd("C:/Users/JRB/Dropbox/505/paper/mil")
mil <- read.csv("jme_v1.csv")
mil <- as.matrix(mil)
mil[,2][mil[,2] == "SVK "] = "SVK"
mil[,19][mil[,19] == "Mar"] = "MAR"
mil <- subset(mil, mil[,3] != "NATO")
mil <- subset(mil, mil[,5] != "NATO")
countries <- mil[,2]
for (i in 3:ncol(mil)) {countries <- c(countries,mil[,i])}
countries <- sort(unique(countries))
countryid <- as.integer(1:length(countries))
statea <- rep(countries[3:length(countries)],
times = length(countries) - 2)
stateaid <- match(statea,countries)
stateb <- rep(countries[3:length(countries)],
each = length(countries) - 2)
statebid <- match(stateb,countries)
states <- cbind(statea,stateaid,stateb,statebid)
rm(statea,stateaid,stateb,statebid)
states <- as.data.frame(states)
states <- subset(states, states$stateaid != states$statebid)
states$id <- as.numeric(data.matrix(states$stateaid)) * 1000 +
as.numeric(data.matrix(states$statebid))
states$idc <- 0
idctot = matrix(data = NA, nrow = 29756, ncol = 11)
rm(list = ls())
library(epicalc)
detachAllData()
library(foreign)
library(maxLik)
library(stargazer)
library(AER)
mil <- read.csv("jme_v1.csv")
mil <- as.matrix(mil)
mil[,2][mil[,2] == "SVK "] = "SVK"
mil[,19][mil[,19] == "Mar"] = "MAR"
mil <- subset(mil, mil[,3] != "NATO")
mil <- subset(mil, mil[,5] != "NATO")
countries <- mil[,2]
for (i in 3:ncol(mil)) {countries <- c(countries,mil[,i])}
countries <- sort(unique(countries))
countryid <- as.integer(1:length(countries))
statea <- rep(countries[3:length(countries)],
times = length(countries) - 2)
stateaid <- match(statea,countries)
stateb <- rep(countries[3:length(countries)],
each = length(countries) - 2)
statebid <- match(stateb,countries)
states <- cbind(statea,stateaid,stateb,statebid)
rm(statea,stateaid,stateb,statebid)
states <- as.data.frame(states)
states <- subset(states, states$stateaid != states$statebid)
states$id <- as.numeric(data.matrix(states$stateaid)) * 1000 +
as.numeric(data.matrix(states$statebid))
states$idc <- 0
idctot = matrix(data = NA, nrow = 29756, ncol = 11)
rm(list = ls())
library(epicalc)
detachAllData()
library(foreign)
library(maxLik)
library(stargazer)
library(AER)
setwd("C:/Users/JRB/Dropbox/505/paper/mil")
mil <- read.csv("jme_v1.csv")
mil <- as.matrix(mil)
mil[,2][mil[,2] == "SVK "] = "SVK"
mil[,19][mil[,19] == "Mar"] = "MAR"
mil <- subset(mil, mil[,3] != "NATO")
mil <- subset(mil, mil[,5] != "NATO")
countries <- mil[,2]
for (i in 3:ncol(mil)) {countries <- c(countries,mil[,i])}
countries <- sort(unique(countries))
countryid <- as.integer(1:length(countries))
statea <- rep(countries[3:length(countries)],
times = length(countries) - 2)
stateaid <- match(statea,countries)
stateb <- rep(countries[3:length(countries)],
each = length(countries) - 2)
statebid <- match(stateb,countries)
states <- cbind(statea,stateaid,stateb,statebid)
rm(statea,stateaid,stateb,statebid)
states <- as.data.frame(states)
states <- subset(states, states$stateaid != states$statebid)
states$id <- as.numeric(data.matrix(states$stateaid)) * 1000 +
as.numeric(data.matrix(states$statebid))
states$idc <- 0
idctot = matrix(data = NA, nrow = 29756, ncol = 11)
load("/Users/justinnicholson/Dropbox/Class/PE2/FinalPaper/indepvars.rda")
View(indepvars)
load("/Users/justinnicholson/Dropbox/Class/PE2/FinalPaper/states2.rda")
View(states2)
imf_test
getwd()
library(foreign)
read.dta("Archigos2.dta")
arch2 = read.dta("Archigos2.dta")
ls(arch)
ls(arch2)
quit()
fffff
print("hello world")
setwd("/Users/justinnicholson/documents/academic/projects/2ypaper/data/conversion")    #set working directory
library(foreign)
library(countrycode)
library(epicalc)
load("adjudication.rda")
setwd("/Users/justinnicholson/documents/academic/projects/2ypaper/data/images")    #set working directory
save.image(file = "adjudication.rda")
ls(data)
colnames)data
colnames(data)
colnames(data[48])
colnames(data[48]) <- "s.NV.AGR.TOTL.ZS"
colnames(data[48])
colnames(data[48]) <- "test"
colnames(data[48])
colnames(data)[48]
colnames(data)[48] <- "s.NV.AGR.TOTL.ZS"
colnames(data)[48]
arch
arch[arch$ccode == "255"]
arch[arch$ccode == "255", ]
arch[arch$ccode == "250", ]
arch[arch$ccode == "265", ]
arch[arch$idacr == "GFR", ]
data[data$t.ccode == 255]
data[data$t.ccode == 255,]
data$INV_CTY_NAME[data$t.ccode == 255,]
data$INV_CTY_NAME[data$t.ccode == 255]
colnames(data)
colnames(data)[2]
colnames(data)[2:3]
which(data$INV_CTY_NAME == "Bosnia and Herzegovina")
data$t.ccodeFILE <- data$t.ccode
data$s.ccodeFILE <- data$s.ccode
t.tenure = matrix(NA,nrow(data),1)
for (i in 1:nrow(data)) {
currentleader = which(data$t.ccode[i] == arch$ccode & data$einitdate[i] >= arch$eindate & data$einitdate[i] <= arch$eoutdate)
tencalc = as.integer(data$einitdate[i] - arch$eindate[currentleader])
if(length(tencalc)==1){
t.tenure[i] = tencalc
} else if(length(tencalc) == 0) {
t.tenure[i] = NA
} else if(length(tencalc) > 1) {
currentleader = which(data$t.ccode[i] == arch$ccode & data$einitdate[i] >= arch$eindate & data$einitdate[i] < arch$eoutdate)
tencalc = as.integer(data$einitdate[i] - arch$eindate[currentleader])
t.tenure[i] = tencalc
}
else {
print("ERROR")
}
}
t.tenure
t.tenure
scode
t.ccode
t.tenure
data$t.tenure <- t.tenure
rm(t.tenure)
getwd()
setwd("/Users/justinnicholson/documents/academic/projects/2ypaper/data/conversion")
getwd()
write.csv(data, "data.csv")
write.csv(data, "data.csv")
arch$ccode[arch$idacr == "RUS"] = 365
arch$ccode[arch$idacr == "RUS"]
arch$ccode[arch$idacr == "CZE"]
arch$ccode[arch$idacr == "CZR"]
arch$ccode[arch$idacr == "CZR"] = 315
arch$ccode[arch$idacr == "CZR"] = 315
arch$ccode[arch$idacr == "CZR"]
arch$ccode[arch$idacr == "CZE"]
data$t.ccode[data$INV_CTY_NAME == "Czech Republic"]
data$t.ccode[data$INV_CTY_NAME == "Czechoslovakia"]
data$t.ccode[data$INV_CTY_NAME == "Czech Republic"] = 315
data$t.ccode[data$INV_CTY_NAME == "Belarus"]
data$t.ccode[data$INV_CTY_NAME == "Belarus"]
data$einitdate
data$t.ccode[data$INV_CTY_NAME == "Belarus" & data$einitdate <= '1991-08-25']
data$t.ccode[data$INV_CTY_NAME == "Belarus"]
data$t.ccode[data$INV_CTY_NAME == "Russia"]
data$t.ccode[data$INV_CTY_NAME == "Belarus" & data$einitdate <= '1991-08-25'] = 365
data$t.ccode[data$INV_CTY_NAME == "Macedonia" & data$einitdate <= '1991-08-25']
data$t.ccode[data$INV_CTY_NAME == "Macedonia" & data$einitdate <= '1991-08-25']
data$t.ccode[data$INV_CTY_NAME == "Macedonia" & data$einitdate <= '1993-04-8']
data$t.ccode[data$INV_CTY_NAME == "Macedonia" & data$einitdate <= '1993-04-8'] = 365
data$t.ccode[data$INV_CTY_NAME == "Ukraine" & data$einitdate <= '1991-08-24']
data$t.ccode[data$INV_CTY_NAME == "Ukraine" & data$einitdate <= '1991-08-24'] = 365
t.tenure = matrix(NA,nrow(data),1)
for (i in 1:nrow(data)) {
currentleader = which(data$t.ccode[i] == arch$ccode & data$einitdate[i] >= arch$eindate & data$einitdate[i] <= arch$eoutdate)
tencalc = as.integer(data$einitdate[i] - arch$eindate[currentleader])
if(length(tencalc)==1){
t.tenure[i] = tencalc
} else if(length(tencalc) == 0) {
t.tenure[i] = NA
} else if(length(tencalc) > 1) {
currentleader = which(data$t.ccode[i] == arch$ccode & data$einitdate[i] >= arch$eindate & data$einitdate[i] < arch$eoutdate)
tencalc = as.integer(data$einitdate[i] - arch$eindate[currentleader])
t.tenure[i] = tencalc
}
else {
print("ERROR")
}
}
data$t.tenure <- t.tenure
write.csv(data, "data.csv")
getwd()
data$t.ccode[data$INV_CTY_NAME == "Czech Republic"]
data$INV_CTY_NAME[data$t.ccode == 316]
data[data$t.ccode == 316,]
data$t.ccode[data$INV_CTY_NAME == "Czechoslovakia"] = 315
arch$ccode[arch$idacr == "CZE"]
arch$ccode[arch$idacr == "CZR"]
t.tenure = matrix(NA,nrow(data),1)
for (i in 1:nrow(data)) {
currentleader = which(data$t.ccode[i] == arch$ccode & data$einitdate[i] >= arch$eindate & data$einitdate[i] <= arch$eoutdate)
tencalc = as.integer(data$einitdate[i] - arch$eindate[currentleader])
if(length(tencalc)==1){
t.tenure[i] = tencalc
} else if(length(tencalc) == 0) {
t.tenure[i] = NA
} else if(length(tencalc) > 1) {
currentleader = which(data$t.ccode[i] == arch$ccode & data$einitdate[i] >= arch$eindate & data$einitdate[i] < arch$eoutdate)
tencalc = as.integer(data$einitdate[i] - arch$eindate[currentleader])
t.tenure[i] = tencalc
}
else {
print("ERROR")
}
}
data$t.tenure <- t.tenure
write.csv(data, "data.csv")
getwd()
data$t.ccode[data$INV_CTY_NAME == "Slovakia" & data$einitdate <= '1993-12-01'] = 315
